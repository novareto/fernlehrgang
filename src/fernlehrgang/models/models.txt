Testen des Datenbankschemas
===========================

:Test-Layer: functional

Zunächst müssen wir erneut eine Instanz von unserer Application anlegen,
uma alle Utilities zur Verfügung zu haben.

   >>> from fernlehrgang.app import FernlehrgangApp
   >>> root = getRootFolder()
   >>> root['app'] = app = FernlehrgangApp()

Für unsere Tests brauchen wir auch das Session Objekt:

   >>> from z3c.saconfig import Session
   >>> session = Session()


Fernlehrgang
------------

Wir starten mit einer Instanz vom Fernlehrgang; diesen werden wir dann DB-Technisch durchtesten.

   >>> from fernlehrgang.models import Fernlehrgang
   >>> fernlehrgang = Fernlehrgang(jahr=2009, titel='Fernlehrgang', 
   ...                               beschreibung='Beschreibugn', start="01.01.2009", ende="31.12.2009")

Zuerst prüfen wir ob wir schon Fernlehrgänge in der Datenbank haben.

   >>> int(session.query(Fernlehrgang).count())
   0

Ok wir haben noch keinen Fernlehrgang in unserer Datenbank; legen wir einen an.

   >>> session.add(fernlehrgang)

Wir sollten nun einen Fernlehrgang in der DB haben:

   >>> int(session.query(Fernlehrgang).count())
   1

Wenn wir gezielt nach unseren Fernlehrgang suchen sollten wir erneut unsere Instanz bekommen.

   >>> fernlehrgang = session.query(Fernlehrgang).one()
   >>> fernlehrgang
   <Fernlehrgang(id='...', jahr='2009', titel='Fernlehrgang')>
   >>> import transaction; transaction.commit() 

Nun können wir für unseren Fernlehrgang Verschiedene Lehrhefte anlegen.

   >>> session = Session()
   >>> fernlehrgang = session.query(Fernlehrgang).one()
   >>> from fernlehrgang.models import Lehrheft
   >>> lehrheft1 = Lehrheft(nummer=1)
   >>> lehrheft1
   <Lehrgang(id='None', nummer='1', fernlehrgangid='None')>

   >>> lehrheft2 = Lehrheft(nummer=2)
   >>> lehrheft2
   <Lehrgang(id='None', nummer='2', fernlehrgangid='None')>
   
Diese Lehrhefte können wir jetzt unserem Fernlehrgang zuweisen

   >>> fernlehrgang.lehrhefte.append(lehrheft1)
   >>> fernlehrgang.lehrhefte.append(lehrheft2)

   >>> import transaction; transaction.commit() 

Um die Session sauber zu haben machenn wir mal einen Commit. Wir sollten dann
alle Referenzen auf die Objekte bekommen.

   >>> session = Session()
   >>> fernlehrgang = session.query(Fernlehrgang).one()
   >>> fernlehrgang
   <Fernlehrgang(id='...', jahr='2009', titel='Fernlehrgang')>

   >>> lehrheft = fernlehrgang.lehrhefte[0]

   >>> from fernlehrgang.models import Resultat
   >>> resultat = Resultat(frage=1, antwortschema="abac")


   >>> session.delete(fernlehrgang)
   >>> import transaction; transaction.commit() 

Cleaning
--------

   >>> session = Session()
   >>> from fernlehrgang.models.models import Base
   >>> mt = Base.metadata
   >>> mt.bind = session.connection().engine
   >>> mt
   MetaData(Engine(postgres://cklinger@localhost:5432/fernlehrgang))

   >>> mt.drop_all()
